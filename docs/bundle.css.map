{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/App.svelte",
    "../src/components/Toolbar.svelte",
    "../src/components/Books.svelte",
    "../src/components/Book.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Toolbar from './Toolbar.svelte';\n\timport Books from './Books.svelte';\n\timport { auth, googleProvider } from './../firebase';\n\timport { authState } from 'rxfire/auth';\n\timport { getFirebase } from './../storage';\n\n\tlet user;\n\n\tconst unsubscribe = authState(auth).subscribe(u => user = u);\n\n\tfunction copyLink() {\n\t\tconst input = document.createElement('input');\n\t\tinput.value = storage.getFirebase(true);\n\t\tdocument.body.appendChild(input);\n\t\tinput.select();\n\t\tdocument.execCommand(\"copy\");\n\t\tdocument.body.removeChild(input);\n\t\talert(\"Url copied.\");\n\t}\n</script>\n\n<style>\n\t:global(button) {\n\t\tcursor: pointer;\n\t}\n\tsection {\n\t\tmargin: 1em;\n\t}\n</style>\n\n<Toolbar {user}/>\n<hr>\n<section>\n\t<Books {...user}/>\n</section>\n",
    "<script>\n\timport Auth from './Auth.svelte';\n\n\texport let user;\n\n\tfunction copyLink() {\n\t\tconst input = document.createElement('input');\n\t\tinput.value = storage.getFirebase(true);\n\t\tdocument.body.appendChild(input);\n\t\tinput.select();\n\t\tdocument.execCommand(\"copy\");\n\t\tdocument.body.removeChild(input);\n\t\talert(\"Url copied.\");\n\t}\n</script>\n\n<style>\n\tul {\n\t\tpadding: none;\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tul li {\n\t\tdisplay: inline-block;\n\t}\n</style>\n\n<ul>\n\t<li>\n\t\t<button on:click={copyLink}>Build Url</button>\n\t</li>\n\t<li>\n\t\t<Auth {user} />\n\t</li>\n</ul>\n",
    "<script>\n    import Book from './Book.svelte';\n    import { db } from './../firebase';\n    import { collectionData } from 'rxfire/firestore';\n    import { startWith } from 'rxjs/operators';\n\n    // User ID passed from parent\n    export let uid;\n    let openedBook;\n\n    const collection = db.collection('books');\n\n    // Query requires an index, see screenshot below\n    const query = collection.orderBy('title');\n\n    const books = collectionData(query, 'id').pipe(startWith([]));\n\n    const openBook = (book) => openedBook = book;\n    const closeBook = () => openedBook = false;\n</script>\n\n<style>\n    ul {\n        padding: none;\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n</style>\n\n{#if openedBook}\n<button on:click={closeBook}>Close {openedBook.title}</button>\n{:else}\n<ul>\n    {#each $books as book}\n    <li>\n        <Book {...book, {onClick: openBook.bind(openBook, book)}}/>\n    </li>\n    {/each}\n</ul>\n{/if}\n",
    "<script>\n    export let id;\n    export let title;\n    export let author;\n    export let publishedAt;\n    export let onClick;\n</script>\n\n<style>\n    button {\n        text-align: left;\n    }\n    h1 {\n        margin: 0\n    }\n</style>\n\n<button on:click={onClick}>\n    <h1>{title}</h1>\n    <small>by {author} ({publishedAt.toDate().getFullYear()})</small>\n</button>\n"
  ],
  "names": [],
  "mappings": "AAuBS,MAAM,AAAE,CAAC,AAChB,MAAM,CAAE,OAAO,AAChB,CAAC,AACD,OAAO,cAAC,CAAC,AACR,MAAM,CAAE,GAAG,AACZ,CAAC;ACXD,EAAE,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACV,CAAC,AACD,iBAAE,CAAC,EAAE,eAAC,CAAC,AACN,OAAO,CAAE,YAAY,AACtB,CAAC;ACHE,EAAE,cAAC,CAAC,AACA,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACb,CAAC;AClBD,MAAM,cAAC,CAAC,AACJ,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,EAAE,cAAC,CAAC,AACA,MAAM,CAAE,CAAC;IACb,CAAC"
}